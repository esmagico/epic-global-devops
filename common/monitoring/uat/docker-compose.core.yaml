volumes:
  loki:
  grafana:
  prometheus:

services:
  loki:
    image: grafana/loki:2.9.5
    restart: always
    depends_on:
      - minio
    volumes:
      - './loki/loki-config.yaml:/etc/loki/loki-config.yaml'
      - loki:/loki
    environment:
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY:?MINIO_ACCESS_KEY is not set}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY:?MINIO_SECRET_KEY is not set}
      MINIO_LOKI_BUCKET: loki
      LOKI_TABLE_INDEX_PERIOD: ${LOKI_TABLE_INDEX_PERIOD:-24h}
    command: -config.file=/etc/loki/loki-config.yaml -config.expand-env=true


  grafana:
    image: grafana/grafana:11.3.2
    restart: always
    depends_on:
      - prometheus
    environment:
      GF_SERVER_ROOT_URL: ${DOMAIN_SCHEME}://grafana.${DOMAIN_NAME}
      GF_SERVER_SERVE_FROM_SUB_PATH: ${GF_SERVER_SERVE_FROM_SUB_PATH:-false}
      GF_SECURITY_ADMIN_USER: ${GF_SECURITY_ADMIN_USER:-admin}
      GF_SECURITY_ADMIN_PASSWORD: ${GF_SECURITY_ADMIN_PASSWORD:?GF_SECURITY_ADMIN_PASSWORD is not set}
    volumes:
      - grafana:/var/lib/grafana
      - ./grafana/:/etc/grafana/provisioning/
      - ./grafana/dashboards/:/var/lib/grafana/dashboards/ 


  prometheus:
    image: prom/prometheus:v3.1.0
    restart: always
    volumes:
      - ./prometheus/prometheus.yaml:/etc/prometheus/prometheus.yaml
      - prometheus:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yaml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
      - '--storage.tsdb.retention.time=7d'
      - '--storage.tsdb.retention.size=256GB'