services:
  db:
    image: postgres:17.2
    restart: always
    volumes:
      - db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER:?POSTGRES_USER is not set}", "-d", "${POSTGRES_DB_BACKEND:?POSTGRES_DB_BACKEND is not set}"]
      interval: 5s
      timeout: 5s
      retries: 5
    environment:
      POSTGRES_USER: ${POSTGRES_USER:?POSTGRES_USER is not set}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:?POSTGRES_PASSWORD is not set}
      POSTGRES_DB: ${POSTGRES_DB_BACKEND:?POSTGRES_DB_BACKEND is not set}

  db-ai:
    image: postgres:14.15-alpine3.21
    restart: always
    ports:
      - "5432:5432" 
    volumes:
      - db-ai:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER:?POSTGRES_USER is not set}", "-d", "${POSTGRES_DB_AI:?POSTGRES_DB is not set}"]
      interval: 5s
      timeout: 5s
      retries: 5
    environment:
      POSTGRES_USER: ${POSTGRES_USER:?POSTGRES_USER is not set}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:?POSTGRES_PASSWORD is not set}
      POSTGRES_DB: ${POSTGRES_DB_AI:?POSTGRES_DB_AI is not set}


  # db-keycloak:
  #   image: postgres:17.2
  #   restart: always
  #   volumes:
  #     - db-keycloak:/var/lib/postgresql/data
  #   healthcheck:
  #     test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER:?POSTGRES_USER is not set}", "-d", "${POSTGRES_DB_KEYCLOAK:?POSTGRES_DB_KEYCLOAK is not set}"]
  #     interval: 5s
  #     timeout: 5s
  #     retries: 5
  #   environment:
  #     POSTGRES_USER: ${POSTGRES_USER:?POSTGRES_USER is not set}
  #     POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:?POSTGRES_PASSWORD is not set}
  #     POSTGRES_DB: ${POSTGRES_DB_KEYCLOAK:?POSTGRES_DB_KEYCLOAK is not set}



volumes:
  db:
  db-ai:
  # db-keycloak: